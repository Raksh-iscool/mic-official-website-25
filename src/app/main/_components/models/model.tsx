"use client";

/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
*/

import * as THREE from "three";
import React, { forwardRef } from "react";
import { useGLTF } from "@react-three/drei";

const Model = forwardRef<
  THREE.Group,
  JSX.IntrinsicElements["group"]
>(function Model(props, ref) {
  const { nodes, materials } = useGLTF(
    "/mic-website-hero.glb"
  );
  return (
    <group ref={ref} {...props} dispose={null}>
      <mesh
        castShadow
        receiveShadow
        geometry={
          (nodes.MicrosoftCube_1 as THREE.Mesh).geometry
        }
        material={materials["Microsoft_Orange.008"]}
      />
      <mesh
        castShadow
        receiveShadow
        geometry={
          (nodes.MicrosoftCube_2 as THREE.Mesh).geometry
        }
        material={materials["Microsoft_Green.008"]}
      />
      <mesh
        castShadow
        receiveShadow
        geometry={
          (nodes.MicrosoftCube_3 as THREE.Mesh).geometry
        }
        material={materials["Microsoft_Yellow.008"]}
      />
      <mesh
        castShadow
        receiveShadow
        geometry={
          (nodes.MicrosoftCube_4 as THREE.Mesh).geometry
        }
        material={materials["Microsoft_Blue.008"]}
      />
      <mesh
        castShadow
        receiveShadow
        geometry={
          (nodes.MicrosoftCube_5 as THREE.Mesh).geometry
        }
        material={materials["Microsoft_Orange.008"]}
      />
      <mesh
        castShadow
        receiveShadow
        geometry={
          (nodes.MicrosoftCube_6 as THREE.Mesh).geometry
        }
        material={materials["Microsoft_Green.008"]}
      />
      <mesh
        castShadow
        receiveShadow
        geometry={
          (nodes.MicrosoftCube_7 as THREE.Mesh).geometry
        }
        material={materials["Microsoft_Yellow.008"]}
      />
      <mesh
        castShadow
        receiveShadow
        geometry={
          (nodes.MicrosoftCube_8 as THREE.Mesh).geometry
        }
        material={materials["Microsoft_Blue.008"]}
      />
    </group>
  );
});

useGLTF.preload("/mic-website-hero.glb");

export default Model;
